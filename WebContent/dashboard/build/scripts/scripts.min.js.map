{"version":3,"sources":["app.js","mobile-helpers.js","sidebar.truck.controls.js","truckfeed.resizer.js","controllers/sri.dashboard.controller.LeftPanel.js","controllers/sri.dashboard.controller.Main.js","controllers/sri.dashboard.controller.Module.js","controllers/sri.dashboard.controller.RightTopMenu.js","controllers/sri.dashboard.controller.TruckFeed.js","controllers/sri.dashboard.controller.TruckfeedControls.js","directives/sri.dashboard.directive.Module.js","directives/sri.directive.Collapse.js","directives/sri.directive.DefaultImage.js","directives/sri.directive.MaterialEffect.js","services/sri.dashboard.factory.Weight.js","services/sri.dashboard.filter.Time.js","services/sri.dashboard.service.Mettler.js","services/sri.dashboard.service.PingImage.js","services/sri.dashboard.service.Profile.js","services/sri.dashboard.service.WeightReports.js","directives/modules/sri.dashboard.directive.DataCaptured.js","directives/modules/sri.dashboard.directive.MainlineWIM.js","sri.dashboard.controller.Modules.js","data-captured/sri.dashboard.controller.DataCaptured.js","license-plate-reader/sri.dashboard.controller.LicensePlate.js","safer-lookup/sri.dashboard.controller.SaferLookup.js","static-scale/sri.dashboard.controller.StaticScale.js","truck-phone/sri.dashboard.controller.TruckPhoneInfo.js","wim/sri.dashboard.controller.RampWIM.js","safer/company-data/sri.dashboard.module.CompanyData.js","safer/safety-rating/sri.dashboard.module.SafetyRating.js","safer/us-crash-data/sri.dashboard.module.CrashData.js","safer/us-inspections/sri.dashboard.module.USInspections.js"],"names":[],"mappingsnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzhrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfttKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scripts.min.js","sourcesContent":["/*\r\n * @author \tRobert Roth\r\n * @desc   \tBeginning of the Dashboard application.\r\n * \t\t\tHere we load the Module into the DOM first,\r\n * \t\t\tthen initialize our app.\r\n */\r\n\r\n\r\n(function(window, document, $, undefined) {\r\n\t\r\n\t/*\r\n\t * This is experimental. This is how we customize the \r\n\t * dashboard and how we place it in the UI.\r\n\t */\r\n\t\r\n\tvar left = document.getElementById('left_panel');\r\n\tvar middle = document.getElementById('middle_panel');\r\n\tvar right = document.getElementById('right_panel');\r\n\r\n\tleft.innerHTML = '<div ng-include=\"\\'modules/wim/RampWIM.html\\'\"></div>' + \r\n\t\t\t\t\t '<div ng-include=\"\\'modules/static-scale/StaticScale.html\\'\"></div>' +\r\n\t\t\t\t\t '<div ng-include=\"\\'modules/safer/us-inspections/Inspections.html\\'\"></div>';\r\n\t\r\n\tmiddle.innerHTML = \t'<div ng-include=\"\\'modules/truck-phone/TruckPhoneInfo.html\\'\"></div>' +\r\n\t\t\t\t\t\t'<div ng-include=\"\\'modules/safer/safety-rating/SafetyRating.html\\'\"></div>' +\r\n\t\t\t\t\t\t'<div ng-include=\"\\'modules/safer/us-crash-data/CrashData.html\\'\"></div>' +\r\n\t\t\t\t\t\t'<div ng-include=\"\\'modules/license-plate-reader/LicensePlateTmpl.html\\'\"></div>' +\r\n\t\t\t\t\t\t'<div ng-include=\"\\'modules/safer/us-crash-data/CrashData2.html\\'\"></div>';\r\n\r\n\tright.innerHTML = \t'<div ng-include=\"\\'modules/safer-lookup/SaferLookup.html\\'\"></div>' + \r\n\t\t\t\t\t\t'<div ng-include=\"\\'modules/safer/company-data/CompanyData.html\\'\"></div>' +\r\n\t\t\t\t\t\t'<div ng-include=\"\\'modules/safer/safety-rating/SafetyRating2.html\\'\"></div>';\r\n\r\n\tangular.module('SRI.DASHBOARD', [\r\n\t\t 'sri.controller.Main',\r\n\t\t 'sri.module.Truckfeed',\r\n\t\t 'sri.controller.rightPanelMenu',\r\n\t\t 'sri.controller.LeftPanel',\r\n\t\t 'sri.controller.sriModules',\r\n\t\t 'sri.controller.truckfeedControls',\r\n\t\t // This dependency contains the controllers\r\n\t\t // for all modules done as a parent module.\r\n\t\t 'sri.container.Modules'\r\n\t\t ]);\r\n\t\r\n})(window, document, jQuery);\r\n\t\t \r\n\t\t  ","\r\n/*\r\n * @author rothr\r\n * @desc Holds scripts for mobile view interaction between the Truck Feed\r\n * \t\t (Sidebar) and the Modules Container(Right Panel).\r\n */\r\n(function(window, document, jQuery, undefined){\r\n\t$(document).ready(function() {\r\n\t\t\r\n\t\tnew WOW().init();\r\n\t\t\r\n\t\t$('.fadeInLeft, .fadeInOut, .fadeInRight, .fadeOutRight').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function(){\r\n\t\t      $(this).removeClass('fadeInDown');\r\n\t\t});\r\n\t\t\r\n\t\tvar item = {\r\n\t\t\tshow: function( device ) {\r\n\t\t\t\tdevice = ( device ) ? '-' + device : '';\r\n\t\t\t\tthis.element.removeClass('hidden' + device);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\thide: function( device ) {\r\n\t\t\t\tdevice = ( device ) ? '-' + device : '';\r\n\t\t\t\tthis.element.addClass('hidden' + device);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tfadeIn: function() {\r\n\t\t\t\tthis.element.fadeIn();\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tfadeOut: function() {\r\n\t\t\t\tthis.element.fadeOut();\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tvar mainContent = $.extend({}, item);\r\n\t\tmainContent.element = $('#mainContent');\r\n\t\t\r\n\t\tvar frame = $.extend({}, item);\r\n\t\tframe.element = $('#frameContainer');\r\n\t\t\r\n\t\tframe.init = function() {\r\n\t\t\tvar _this = this;\r\n\t\t\t$('#frameCloser').click(function(evnt) {\r\n\t\t\t\tevnt.preventDefault();\r\n\t\t\t\t_this.fadeOut();\r\n\t\t\t\t_this.element.parent().removeClass('modal-open');\r\n\t\t\t});\r\n\t\t\t_this.element.on('openFrame', function(evnt) {\r\n\t\t\t\tevnt.preventDefault();\r\n\t\t\t\t_this.show(0, _this.fadeIn());\r\n\t\t\t\t_this.element.parent().addClass('modal-open');\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\tframe.init();\r\n\r\n\t\tvar sidebar = $.extend({}, item);\r\n\t\tsidebar.element = $('#sideBar');\r\n\t\t\r\n\t\t$('#phoneSideBar').click( function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tmainContent.show('xs');\r\n\t\t\tsidebar.hide('xs');\r\n\t\t\tmainContent.show('sm');\r\n\t\t\tsidebar.hide('sm');\r\n\t\t\t$(this).hide(0);\r\n\t\t\t$('#phoneModules').show(0)\r\n\t\t});\r\n\r\n\t\t\r\n\t\t$('#phoneSideBar').on('phone:touch', function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tmainContent.show('xs');\r\n\t\t\t\tsidebar.hide('xs');\r\n\t\t\t\tmainContent.show('sm');\r\n\t\t\t\tsidebar.hide('sm');\r\n\t\t\t}, 200);\r\n\t\t\t$(this).hide(0);\r\n\t\t\t$('#phoneModules').show(0)\r\n\t\t});\r\n\t\t\r\n\t\t$('#phoneModules').click( function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tmainContent.hide('xs');\r\n\t\t\tsidebar.show('xs');\r\n\t\t\tmainContent.hide('sm');\r\n\t\t\tsidebar.show('sm');\r\n\t\t\t// fix a bug where vehicle entries shrink when saving\r\n\t\t\t// usdot numbers manually\r\n\t\t\t$('#vehicleEntries').height('100%');\r\n\t\t\t$('#vehicleEntries').height( $('#vehicleEntries').height() -29 );\r\n\t\t\t$(this).hide(0);\r\n\t\t\t$('#phoneSideBar').show(0)\r\n\t\t});\r\n\t\t\r\n\t});\r\n})(window, document, $);","'use strict';\r\n\t\t\t\r\n(function() {\r\n\t// resize the controls wrapper width according to sideBar width\r\n\t// this is done for child elements with \"fixed\" position\r\n\tvar truckControlsResize = (function() {\r\n\t\treturn function () {\r\n\t\t\tvar width = $(\".entry-wrapper\").css(\"width\");\r\n\t\t\t$(\".truck-entry-controls\").css('width', width);\r\n\t\t};\t\t\t\t\t\r\n\t})();\r\n\t// this show truck entries according to selected status:\r\n\t// passed, warned, failed, otherwise shows all\r\n\t// this automatically add .active class on first entry\r\n\tvar listTruckEntries = (function(status) {\r\n\t\tvar vehicles = null;\r\n\t\treturn function(status) {\r\n\t\t\t// get all entries to a variable\r\n\t\t\tvehicles = $('#vehicleEntries').find('.truck-entry-box');\r\n\t\t\t// map all vehicles and return ones with status\r\n\t\t\tif(status) {\r\n\t\t\t\tvehicles = $.map(vehicles, function(vehicle){\r\n\t\t\t\t\t$(vehicle).removeClass('active');\r\n\t\t\t\t\tif( $(vehicle).hasClass(status) ) {\r\n\t\t\t\t\t\t$(vehicle).removeClass('hidden');\r\n\t\t\t\t\t\treturn $(vehicle);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$(vehicle).addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tvehicles = $.map(vehicles, function(vehicle){\r\n\t\t\t\t\t$(vehicle).removeClass('active').find('.glyphicon-chevron-right').addClass('hidden');\r\n\t\t\t\t\t$(vehicle).removeClass('hidden');\r\n\t\t\t\t\treturn $(vehicle);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// the first one is automatically active\r\n\t\t\tvehicles[0].addClass('active').find('.glyphicon-chevron-right').removeClass('hidden');\r\n\t\t\t\r\n\t\t\tconsole.log(\"Trigger: refresh-list\");\r\n\t\t\t$('#mainLoader').addClass('hidden');\r\n\t\t\tApp.Event.Vehicle.trigger(\"refresh-list\");\r\n\t\t};\r\n\t\t\r\n\t})();\r\n\t//resize truck controls on init\r\n\ttruckControlsResize();\r\n\t// bind truckControlsResize function to window resizing\r\n\t$(window).bind(\"resize\", function() {\r\n\t\ttruckControlsResize();\r\n\t});\r\n\t// gives the ability to change the text for .btn-value according\r\n\t// to the selected option; emulates listbox form element\r\n\t$('.truck-entry-controls > .btn-group > .dropdown-menu > li > a').bind('click', function(e) {\r\n\t\te.preventDefault();\r\n\t\tvar el = this;\r\n\t\tvar id = $(el).closest('ul').siblings('.btn-value').find('.option-text');\r\n\t\t$(id).text($(el).text());\r\n\t});\r\n\t// this is for showing truck entries according to status\r\n\t// inside our sideBar\r\n\t$(\"#truckStatusOption > li > a\").bind('click', function() {\r\n\t\t\r\n\t\t//$('.entry-wrapper').find('.truck-entry-box').addClass('hidden');\r\n\t\tvar option = $(this).text();\r\n\t\t\r\n\t\tif (option === \"Passed\") {\r\n\t\t\tlistTruckEntries('passed');\r\n\t\t\t//App.Event.Vehicle.trigger('pass');\r\n\t\t}\r\n\t\telse if (option === \"Warned\") {\r\n\t\t\tlistTruckEntries('warned');\r\n\t\t}\r\n\t\telse if (option === \"Failed\") {\r\n\t\t\tlistTruckEntries('failed');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlistTruckEntries();\r\n\t\t}\r\n\t\t\r\n\r\n\t\ttruckControlsResize();\r\n\t\t\r\n\t});\r\n\t\r\n\t$('.entryDate').text(moment().format(\"h:mm:ss a MM/DD/YYYY\"));\r\n\t\r\n})(jQuery);","\r\n\r\n(function(window, document, $, undefined) {\r\n\t// debouncing function from John Hann\r\n\t// http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/\r\n\t// ---\r\n\t// @desc this throttles the resize event for the window object.\r\n\t// this is a more efficient way of listening to window resize event.\r\n\t(function($,sr){\r\n\t  var debounce = function (func, threshold, execAsap) {\r\n\t      var timeout;\r\n\t      return function debounced () {\r\n\t          var obj = this, args = arguments;\r\n\t          function delayed () {\r\n\t              if (!execAsap)\r\n\t                  func.apply(obj, args);\r\n\t              timeout = null;\r\n\t          };\r\n\t          if (timeout)\r\n\t              clearTimeout(timeout);\r\n\t          else if (execAsap)\r\n\t              func.apply(obj, args);\r\n\t          timeout = setTimeout(delayed, threshold || 100);\r\n\t      };\r\n\t  }\r\n\t  // smartresize \r\n\t  jQuery.fn[sr] = function(fn){  return fn ? this.bind('resize', debounce(fn)) : this.trigger(sr); };\r\n\t})(jQuery,'smartresize');\r\n\t//--\r\n\t\r\n\t// @author \"rothr\"\r\n\t// @desc \"the following code handles the resizing of the vehicle entries\r\n\t// container to change its height depending on the size of its parent.\r\n\t// without this, the truckfeed would not fit properly, and no CSS can\r\n\t// help with this\"\r\n\r\n\t// this is the height of the truckfeed controls container\r\n\tvar MENU_HEIGHT = 29;\r\n\t// the select or id for the element to resize\r\n\tvar ELEMENT_ID = '#vehicleEntries';\r\n\t\r\n\tvar vehicleEntries = {};\r\n\tvehicleEntries.el = $(ELEMENT_ID);\r\n\tvehicleEntries.height = function( height ) {\r\n\t\tvar _this = this;\r\n\t\t// if height is undefined give 100% as default height\r\n\t\theight = '100%';\r\n\t\t_this.el.height( height );\r\n\t\t_this.el.height( _this.el.height() - MENU_HEIGHT );\r\n\t\treturn this;\r\n\t}\r\n\t// call the height resize function\r\n\tvehicleEntries.height();\r\n\t// cache window for better access\r\n\tvar $window = $(window);\r\n\t// cache the current window height\r\n\tvar winHeight = $window.height();\r\n\t// use our smartresize function\r\n\t$window.smartresize( function() {\r\n\t\t// change height if window height changed\r\n\t\tif( winHeight !== $window.height() ) {\r\n\t\t\twinHeight = $window.height();\r\n\t\t\tvehicleEntries.height();\r\n\t\t}\r\n\t\t\r\n\t\t// the following code are used to resize the license\r\n\t\t// plate reader module container done in jQuery since\r\n\t\t// it's the easiest and quickest way to do rather \r\n\t\t// than creating another angular directive.\r\n\t\tvar lprContainer = $('.lpr-container');\r\n\t\tvar lprWidth = lprContainer.width();\r\n\t\tvar ratio = 1.3317;\r\n\t\tvar newHeight = lprWidth / ratio;\r\n\t\tlprContainer.height( newHeight );\r\n\t});\r\n\t\r\n})(window, document, jQuery);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.LeftPanel', [])\r\n\t.controller('LeftPanelCTRL', ['$scope', function( $scope ) {\r\n\t\t$scope.truck = $scope.truck || {};\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.Main', [])\r\n\t.controller('MainCTRL', ['$scope', function( $scope ) {\r\n\t\t$scope.truck = $scope.truck || {};\r\n\t\t$scope.feed = $scope.feed || {};\r\n\t}]);","\r\n\r\nangular.module('sri.controller.sriModules', [])\r\n\t.controller('ModuleCTRL', ['$scope', function( $scope ) {\t\r\n\t\t\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\nangular.module('sri.controller.rightPanelMenu', [])\r\n\t.controller('RightMenuCTRL', [ '$scope', 'service.Profile', function( $scope, Profile ) {\r\n\t\t\r\n\t\tvar _this = this;\r\n\t\t\r\n\t\tProfile.getProfile().then( function( data ) {\r\n\t\t\t_this.user = data;\r\n\t\t});\r\n\t\t\r\n\t\t$scope.triggerFrame = function() {\r\n\t\t\t$('#frameContainer').trigger('openFrame');\r\n\t\t};\r\n\t}])","/**\r\n* Truckfeed Module\r\n*\r\n* Description\r\n* Controls the truckfeed portion of the SRI application.\r\n* This gathers all weight reports, and trucks passing by\r\n* the WIM in real time(latency involved).\r\n* \r\n* Dependencies\r\n* $rootScope is used here merely for $broadcast, which similar to jquery's trigger()\r\n* $scope is the scope of our application SRI.DASHBOARD\r\n* $http will be used to make ajax requests\r\n* $filter is service used for accessing the angular filter 'orderBy' which maps our feed by order\r\n* service.WeightReports (scripts/services/WeightReports.js) is a service for getting and building\r\n* our weight reports from the database for user display\r\n* sri.module.Effects (scripts/directives/sri.directive.MaterialEffect.js)\r\n* \t= contains a directive for the Google Material click effect.\r\n*/\r\n'use strict';\r\nangular.module('sri.module.Truckfeed', ['sri.module.Effects'])\r\n// this directive allows us to press enter on a truck feed and trigger the click event for it\r\n.directive(\"clickEnter\", ['$parse', function($parse) {\r\n    return function(scope, element, attr) {\r\n      //grabbing the function from the attributes and parsing it (to get parameters I believe, this taken from the code above.\r\n      var fn = $parse(attr['actionDirective']);\r\n\r\n      //making the handler so it can be bound to different events without repeating again taken from source above\r\n      var handler = function(event) {\r\n          scope.$apply(function() {\r\n           fn(scope, {$event:event});\r\n          }\r\n        )};\r\n\r\n       //If clicked calling the handler\r\n       element.bind('click', handler);\r\n       //Checking first that it's the enter key \"13\" then calling the handler\r\n       element.bind('keyup', function(event) { if(event.keyCode==13) handler(event)});\r\n    }\r\n}])\r\n// add a controller to our module\r\n.controller('TruckFeedCTRL',\r\n// inject dependencies\r\n['$rootScope', '$scope', '$http', '$filter','service.WeightReports', 'service.Profile', '$timeout',                           \r\n// create our controller using an anonymous function\r\nfunction( $rootScope, $scope, $http, $filter, WeightReports, Profile, $timeout ) {\r\n\t// these are the variables added to our scope\r\n\t$scope.trucks = [];\r\n\t// initialize our truck object\r\n\t$scope.truck = $scope.truck || {};\r\n\t$scope.truck.current = {};\r\n\t$scope.truck.scroll = true;\r\n\t// Truck sequence is a cached object for faster\r\n\t// locating of a truck using its sequence number.\r\n\tvar truckSequence = {};\r\n\t// TODO: instead of being event driven, why not attach the\r\n\t// truck sequence to our scope and have other controllers have\r\n\t// access to it similar to truck.current\r\n\t$scope.truck.sequence = [];\r\n\t// get time two hours ago and use as a time limit\r\n\tvar twoHoursAgo = moment( new Date() ).subtract(2, 'hours').format('YYYY-MM-DD H:mm:ss');\r\n\t// get all weight reports and passing a time limit\r\n\t// will populate within the time limit.\r\n\tWeightReports.getAllWeights( twoHoursAgo )\r\n\t.then( function( weightReports ) {\r\n\t\tvar weights = weightReports.wims;\r\n\t\tvar scales = weightReports.scales;\r\n\r\n\t\tangular.forEach( weights, function( weight ) {\r\n\t\t\tif( weight !== undefined )\r\n\t\t\t\tangular.forEach( scales, function( scale, index ) {\r\n\t\t\t\t\tif( scale !== undefined )\r\n\t\t\t\t\t\tif( weight.sequenceNumber == scale.sequenceNumber ) {\r\n\t\t\t\t\t\t\tweight.hasScale = true;\r\n\t\t\t\t\t\t\tscales.splice( index, 1 );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t});\r\n\t\t// match data from weight report to the truck phone data\r\n\t\t// using the sequence number\r\n\t\tif( weights != undefined ) {\r\n\t\t\t$http.get('/DashCon/resources/truck').then( function( promise ) {\r\n\t\t\t\tvar data = promise.data;\r\n\t\t\t\tvar trucks = [];\r\n\t\t\t\tvar truckfeed = [];\r\n\t\t\t\t\r\n\t\t\t\t// check if we don't have any truck information sent\r\n\t\t\t\t// by from the SRI Mobile Application\r\n\t\t\t\tif( data !== null && data !== \"null\" ) {\r\n\t\t\t\t\t// since we have an irregular JSON response we need\r\n\t\t\t\t\t// to catch if there's only 1 entry from the database\r\n\t\t\t\t\tif( data.truckFeed.id !== undefined ) {\r\n\t\t\t\t\t\ttrucks.push(data.truckFeed);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrucks = data.truckFeed;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// loop through each weight and attach any associated truck\r\n\t\t\t\t\t// information from the saved SRI Mobile Application feed\r\n\t\t\t\t\tfor( var x = 0, len = weights.length; x < len; x++ ) {\r\n\t\t\t\t\t\tvar weight = weights[x];\r\n\t\t\t\t\t\tif( weight != undefined ) {\r\n\t\t\t\t\t\t\tangular.forEach(trucks, function( truck, index ) {\r\n\t\t\t\t\t\t\t\t// Begin merging trucks with similar timestamp\r\n\t\t\t\t\t\t\t\tif( weight.sequenceNumber == truck.sequenceNumber ) {\r\n\t\t\t\t\t\t\t\t\t// Merge the weight's properties with the truck's\r\n//\t\t\t\t\t\t\t\t\ttruck = angular.extend({}, weight );\r\n\t\t\t\t\t\t\t\t\ttruck = angular.extend(truck, weight );\r\n\t\t\t\t\t\t\t\t\t// Adds a Phone Icon if it does have a truckfeed\r\n\t\t\t\t\t\t\t\t\ttruck.hasPhone = true;\r\n\t\t\t\t\t\t\t\t\ttruckfeed.push( truck );\r\n\t\t\t\t\t\t\t\t\ttruckSequence[truck.sequenceNumber.toString()] = truck;\r\n\t\t\t\t\t\t\t\t\ttrucks.splice(index, 1);\r\n\t\t\t\t\t\t\t\t\tweights.splice(x, 1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} //end of for loop\r\n\t\t\t\t}//end of if data !== null\r\n\t\t\t\t\r\n\t\t\t\t// add any weight report that doesn't have any truck\r\n\t\t\t\t// information from our mobile application\r\n\t\t\t\tangular.forEach( weights, function( weight ) {\r\n\t\t\t\t\ttruckfeed.push( weight );\r\n\t\t\t\t\ttruckSequence[weight.sequenceNumber.toString()] = weight;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// Sort our truckfeed array to fix the \"Current Truck\" issue.\r\n\t\t\t\ttruckfeed = $filter('orderBy')(truckfeed, 'timestamp', false);\r\n\t\t\t\t$scope.trucks = truckfeed;\r\n\t\t\t\t\r\n\t\t\t\t// get our user's site id first to screen the LPR functionality\r\n\t\t\t\tProfile.getProfile().then( function( currentUser ) {\r\n\t\t\t\t\tif( currentUser.siteId == '2' ) {\r\n\t\t\t\t\t\t// get LPR and show icon for each feed that has data for it\r\n\t\t\t\t\t\t$http.get('/DashCon/resources/lpr').then( function( promise ) {\r\n\t\t\t\t\t\t\tvar data = promise.data;\r\n\t\t\t\t\t\t\t// check if response is a single object and not an\r\n\t\t\t\t\t\t\t// array objects\r\n\t\t\t\t\t\t\tif( data.id !== undefined ) {\r\n\t\t\t\t\t\t\t\tdata.licensePlate = data;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tangular.forEach(data.licensePlate, function( item ) {\r\n\t\t\t\t\t\t\t\tif( truckSequence[ item.sequenceNumber ] != undefined ) {\r\n\t\t\t\t\t\t\t\t\ttruckSequence[ item.sequenceNumber ].hasLPR = true;\r\n\t\t\t\t\t\t\t\t\ttruckSequence[ item.sequenceNumber ].lprImage = '/DashCon/dashboard/images/lpr/' + item.id + '.jpg';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Set current truck to the latest, which is the last entry\r\n\t\t\t\t\t\t\tif( truckfeed.length > 0 ) {\r\n\t\t\t\t\t\t\t\t$scope.truck.current = $scope.trucks[ $scope.trucks.length - 1 ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});// end of LPR\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// get USDOT number and show icon for each feed that has data for it\r\n\t\t\t\t$http.get('/DashCon/resources/usdot').then( function( promise ) {\r\n\t\t\t\t\tvar data = promise.data;\r\n\t\t\t\t\t// check if response is a single object and not an\r\n\t\t\t\t\t// array objects\r\n\t\t\t\t\tif( data.sequenceNumber !== undefined ) {\r\n\t\t\t\t\t\tdata.usdot = data;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tangular.forEach(data, function( item ) {\r\n\t\t\t\t\t\tif( truckSequence[ item.sequenceNumber ] != undefined ) {\r\n\t\t\t\t\t\t\ttruckSequence[ item.sequenceNumber ].hasUSDOT = true;\r\n\t\t\t\t\t\t\ttruckSequence[ item.sequenceNumber ].usdotNumber = item.usdotNumber;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t});// end of resources/truck\r\n\t\t}// end of if weight is undefined\r\n\t})\r\n\t.then(function() {\r\n\t\t// fade out our pre-loader when truck feed is complete\r\n\t\t$timeout(function() {\r\n\t\t\t$('#mainLoader').fadeOut();\r\n\t\t});\r\n\t});// end of WeightReports.getAllWeights()\r\n\t\r\n\t// long poll our truck feed servlet\r\n\tfunction pollTrucksApp( currentUser ) {\r\n\t\t$http.get('/DashCon/truckFeedPoll').success( function( data ) {\r\n\t\t\t// Disregard invalid entries\r\n\t\t\tif( data.timestamp != null && data.timestamp != \"null\" ) {\r\n\t\t\t// populate feeds based on current user's site id\r\n\t\t\t\tif( currentUser.siteId == data.siteId ) {\r\n\t\t\t\t\ttruckPhoneAppEntry( data, currentUser );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpollTrucksApp(currentUser);\r\n\t\t}).error( function( err ) {\r\n\t\t\tconsole.log( err );\r\n\t\t\tpollTrucksApp(currentUser);\r\n\t\t});\r\n\t}\r\n\t\t\r\n\t// long poll our Mettler weight report servlet\r\n\tfunction pollTrucksMettler( currentUser ) {\r\n\t\t$http.get('/DashCon/mettPoll').success( function( data ) {\r\n\t\t\t// populate feeds based on current user's site id\r\n\t\t\tif( currentUser.siteId == data.siteId ) {\r\n\t\t\t\tif( data.scaleType == 'W' ) {\r\n\t\t\t\t\tpopulateFeedNew( data );\r\n\t\t\t\t} else if( data.scaleType == 'S' ) {\r\n\t\t\t\t\tstaticScaleEntry( data.sequenceNumber );\r\n\t\t\t\t\t$rootScope.$broadcast('staticScale:new', data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpollTrucksMettler(currentUser);\r\n\t\t}).error( function( err ) {\r\n\t\t\tconsole.log( err );\r\n\t\t\tpollTrucksMettler(currentUser);\r\n\t\t});\r\n\t}\r\n\t// adding a truck into our truck feed/sidebar\r\n\tfunction populateFeedNew( data ) {\r\n\t\t// get the time two hours ago; Note: This is based on computer's current time\r\n\t\tvar twoHoursAgo = moment( new Date() ).subtract(2, 'hours').format('MM-DD-YYYY H:mm:ss');\r\n\t\t// make sure data's timestamp is no later than two hours ago\r\n\t\tif( moment(data.timestamp, 'YYYY-MM-DD H:mm:ss').isAfter(moment(twoHoursAgo, 'YYYY-MM-DD H:mm:ss')) ) {\t\t\t\t\t\r\n\t\t\t// create a user friendly format of our new feed's timestamp\r\n\t\t\tdata.displayTime = moment(data.timestamp).format('MM-DD-YYYY H:mm:ss');\r\n\t\t\t// add a 'passed' attribute which is primarily used to affect CSS styling\r\n\t\t\tif( data.grossWeight != undefined ) {\r\n\t\t\t\tdata.passed = ( data.status == 'P' ) ? 'passed' : 'failed';\r\n\t\t\t}\r\n\t\t\t// get our driver's license or commercial license\r\n\t\t\t// and attach it into our new feed\r\n\t\t\tif( data.driversLicense == undefined || data.driversLicense == null || data.driversLicense == \"null\" ) {\r\n\t\t\t\tdata.truckLicense = data.commercialDriversLicense;\r\n\t\t\t} else {\r\n\t\t\t\tdata.truckLicense = data.driversLicense;\r\n\t\t\t}\r\n\t\t\t// if this is the very first feed set it as our current and active truck\r\n\t\t\t// else if feed is not the same as the current feed, set the new feed as current\r\n\t\t\tif( $scope.truck.current == undefined || $scope.trucks.length == 0 ) {\r\n\t\t\t\tif( $scope.truck.scroll === true ) {\r\n\t\t\t\t\t$scope.truck.current = data;\r\n\t\t\t\t}\r\n\t\t\t\t$scope.trucks.push( data );\r\n\t\t\t\ttruckSequence[data.sequenceNumber.toString()] = data;\r\n\t\t\t} else if( ! moment($scope.trucks[$scope.trucks.length -1].timestamp, 'YYYY-MM-DD H:mm:ss').isSame(moment(data.timestamp, 'YYYY-MM-DD H:mm:ss')) ) {\t\r\n\t\t\t\tif( $scope.truck.scroll === true ) {\r\n\t\t\t\t\t$scope.truck.current = data;\r\n\t\t\t\t}\r\n\t\t\t\t$scope.trucks.push( data );\r\n\t\t\t\ttruckSequence[data.sequenceNumber.toString()] = data;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// change active truck to the current event's truck\r\n\t$scope.loadValues = function() {\r\n\t\t// remove current truck as active truck\r\n\t\t$scope.truck.current.active = false;\r\n\t\t// set event's truck as active truck\r\n\t\tthis.truck.active = true;\r\n\t\t// set active truck as our scope's current truck\r\n\t\t$scope.truck.current = this.truck;\r\n\t\t// trigger touch event\r\n\t\t$('#phoneSideBar').trigger('phone:touch');\r\n\t};\r\n\t// change active truck on current truck change\r\n\t$scope.$watch('truck.current', function( newValue, oldValue ) {\r\n\t\tif( newValue != undefined ) {\r\n\t\t\tif( newValue != oldValue && $scope.truck.scroll === true ) {\r\n\t\t\t\tif( oldValue != undefined ) {\r\n\t\t\t\t\toldValue.active = false;\r\n\t\t\t\t}\r\n\t\t\t\tnewValue.active = true;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t// listen to license plate reader image load and populate it in our feed\r\n\t$scope.$on('licensePlateImage', function( $event, message ) {\r\n\t\tvar sequence = message.sequenceNumber;\r\n\t\tvar truck = truckSequence[ sequence ];\r\n\t\ttruck.lprImage = '/DashCon/dashboard/images/lpr/' + message.id + '.jpg';\r\n\t});\r\n\t// remove safer icon from our current truck's feed when this event is triggered\r\n\t$scope.$on('saferLookupUndefined', function( $event, message ) {\r\n\t\tvar truck = $scope.truck.current;\r\n\t\tvar sequenceNumber = truck.sequenceNumber;\r\n\t\ttruck.hasUSDOT = false;\r\n\t\ttruck.usdotNumber = undefined;\r\n\t\tif( truckSequence[ sequenceNumber ] != undefined ) {\r\n\t\t\ttruckSequence[ sequenceNumber ].hasUSDOT = false;\r\n\t\t}\r\n\t});\r\n\t// add LPR icon to our current truck's feed when this even is triggered\r\n\t$scope.$on('licensePlateAvailable', function( $event, message ) {\r\n\t\tvar sequenceNumber = message.sequenceNumber;\r\n\t\tif( truckSequence[ sequenceNumber ] != undefined ) {\r\n\t\t\tvar truck = truckSequence[ sequenceNumber ];\r\n\t\t\ttruck.hasLPR = true;\r\n\t\t\tif( message.licensePlateNumber != undefined ) {\r\n\t\t\t\ttruck.licensePlate = message.licensePlateNumber;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t// add static scale icon and set current truck to this sequence\r\n\tfunction staticScaleEntry( sequenceNumber ) {\r\n\t\tif( truckSequence[ sequenceNumber ] != undefined ) {\r\n\t\t\ttruckSequence[ sequenceNumber ].hasScale = true;\r\n\t\t\tif( $scope.truck.scroll === true ) {\r\n\t\t\t\t$scope.truck.current = truckSequence[ sequenceNumber ];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// add phone app icon and broadcast phone data then validate USDOT\r\n\t// number attached to our phone data and add USDOT icon when valid\r\n\tfunction truckPhoneAppEntry( phoneData, currentUser ) {\r\n\t\tif( truckSequence[ phoneData.sequenceNumber ] != undefined ) {\r\n\t\t\tvar truck = truckSequence[ phoneData.sequenceNumber ];\r\n\t\t\ttruck.hasPhone = true;\r\n\t\t\ttruck.id = phoneData.id;\r\n\t\t\t// verify usdot number works with safer\r\n\t\t\t$http.get('/DashCon/resources/safer/' + phoneData.usdotNumber )\r\n\t\t\t// add an icon if it is valid according to safer\r\n\t\t\t.then( function( promise ) {\r\n\t\t\t\tvar data = promise.data;\r\n\t\t\t\tif( data != '' && data != 'null' && data.companyData != undefined ) {\r\n\t\t\t\t\ttruck.hasUSDOT = true;\r\n\t\t\t\t\ttruck.usdotNumber = phoneData.usdotNumber;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// save the usdot number to our database\r\n\t\t\tphoneData.usdotNumber = String(phoneData.usdotNumber); // parse string\r\n\t\t\tphoneData.manualEntered = 0; // 0 means false\r\n\t\t\tphoneData.userId = currentUser.userId; // grab our current user's username\r\n\t\t\t$http.post('/DashCon/resources/usdot', phoneData); // make the post request\r\n\t\t\t// broadcast that we have a new SRI phone app data available for grabs\r\n\t\t\t// to other modules lsitening\r\n\t\t\t$rootScope.$broadcast('truckFeedNew', phoneData);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// get current user's profile and run our long polls\r\n\tProfile.getProfile().then( function( currentUser ) {\r\n\t\tpollTrucksApp(currentUser);\r\n\t\tpollTrucksMettler(currentUser);\r\n\t});\r\n\r\n\t// TODO: a better solution for verifying truck phone data without\r\n\t// causing a hiccup when changing current trucks\r\n\t// remove phone icon from our current truck's feed when this event is triggered\r\n//\t$scope.$on('truckPhoneUndefined', function( $event, message ) {\r\n//\t\tvar truck = $scope.truck.current;\r\n//\t\tif( truck.hasPhone != true && truck.id == undefined ) {\r\n//\t\t\tvar sequenceNumber = truck.sequenceNumber;\r\n//\t\t\t$scope.truck.current.hasPhone = false;\r\n//\t\t\tif( truckSequence[ sequenceNumber ] != undefined ) {\r\n//\t\t\t\ttruckSequence[ sequenceNumber ].hasPhone = false;\r\n//\t\t\t}\r\n//\t\t}\r\n//\t});\r\n\t\r\n}]);","\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.truckfeedControls', [])\r\n\t.controller('TruckFeedControlsCTRL', ['$scope', function( $scope ) {\r\n\t\t// get the global scope's feed object\r\n\t\t$scope.feed = $scope.feed || {};\r\n\t\t// cache this controller\r\n\t\tvar _this = this;\r\n\t\t// Populate our filters, these are items in buttons\r\n\t\t// that are used to filter the truck feed.\r\n\t\t_this.selectedTime = 120;\r\n\t\t_this.selectedStatus = 'All';\r\n\t\t_this.selectedLock = {\r\n\t\t\ttext: 'Unlocked',\r\n\t\t\ticon: 'fa fa-unlock'\r\n\t\t}\r\n\t\t\r\n\t\t// These are the filters we use and populate as buttons\r\n\t\t// for the users\r\n\t\t_this.statuses = ['All', 'Passed', 'Failed', 'Active', 'SRI Mobile'];\r\n\t\t_this.time = [5, 30, 60, 120];\r\n\t\t_this.scrolling = ['Unlocked', 'Locked'];\r\n\t\t\r\n\t\t// This is the function that changes filters\r\n\t\t_this.statusChange = function( $event, status ) {\r\n\t\t\t_this.selectedStatus = status;\r\n\t\t\tif( status !== 'All' ) {\r\n\t\t\t\tif( status == 'Active' ) {\r\n\t\t\t\t\t$scope.feed.active = true;\r\n\t\t\t\t\t$scope.feed.hasPhone = undefined;\r\n\t\t\t\t\t$scope.feed.statusFilter = undefined;\r\n\t\t\t\t} else if( status == 'SRI Mobile' ) {\r\n\t\t\t\t\t$scope.feed.hasPhone = true;\r\n\t\t\t\t\t$scope.feed.active = undefined;\r\n\t\t\t\t\t$scope.feed.statusFilter = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_this.statusFilter = status.toLowerCase();\r\n\t\t\t\t\t$scope.feed.statusFilter = status.toLowerCase();\r\n\t\t\t\t\t$scope.feed.active = undefined;\r\n\t\t\t\t\t$scope.feed.hasPhone = undefined;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t$scope.feed.statusFilter = undefined;\r\n\t\t\t\t$scope.feed.active = undefined;\r\n\t\t\t\t$scope.feed.hasPhone = undefined;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t_this.timeChange = function( evnt, time ) {\r\n\t\t\t_this.selectedTime = time;\r\n\t\t\t$scope.feed.timeFilter = time;\r\n\t\t};\r\n\t\t\r\n\t\t// This is the function that changes filters\r\n\t\t_this.scrollingChange = function( $event ) {\r\n\t\t\tvar displayText = document.getElementById('scrollingText');\r\n\t\t\tvar scrollingIcon = document.getElementById('scrollingIcon');\r\n\t\t\t\r\n\t\t\tvar value = displayText.innerHTML;\r\n\t\t\t\r\n\t\t\tif( value == 'Locked' ) {\r\n\t\t\t\t$scope.truck.scroll = true;\r\n\t\t\t\tscrollingIcon.className = 'fa fa-unlock';\r\n\t\t\t\tdisplayText.innerHTML = 'Unlocked';\r\n\t\t\t} else {\r\n\t\t\t\t$scope.truck.scroll = false;\r\n\t\t\t\tscrollingIcon.className = 'fa fa-lock';\r\n\t\t\t\tdisplayText.innerHTML = 'Locked';\r\n\t\t\t}\r\n\t\t\t$event.currentTarget.blur();\r\n\t\t};\r\n\t\t\r\n\t}])","\r\n\r\n'use strict';\r\n\r\nangular.module('sri.directive.Module', [])\r\n\t.directive('dirModule', function() {\r\n\t\treturn {\r\n\t\t\trestrict: 'EA',\r\n\t\t\ttemplateUrl: '/DashCon/dashboard/templates/ModuleTMPL.html',\r\n\t\t\tcontroller: function( $scope ) {\r\n\t\t\t\t$scope.currentTruck = $scope.currentTruck || {}; \r\n\t\t\t}\r\n\t\t};\r\n\t});","/*\r\n * @author Robert Roth\r\n * @description This directive controls the collapsing and\r\n * expanding of any module's well, the container where most,\r\n * if not all, data are displayed. A directive is done to\r\n * make this easily reusable by any module.\r\n */\r\n\r\n\r\n\r\n'use strict';\r\n// assign to the main module we will use this directive in\r\nangular.module('SRI.DASHBOARD')\r\n// build our directive, for now we restrict it to attributes only\r\n.directive('moduleCollapse', ['$compile', function( $compile ) {\r\n\treturn {\r\n\t\trestrict: 'A',\r\n\t\tlink: function( scope, element, attrs ) {\r\n\t\t\t// this function does the collapsing and expanding of the wells\r\n\t\t\t// of any module this directive is installed into.\r\n\t\t\tfunction toggleModule( evnt ) {\r\n\t\t\t\t// we require jQuery for this not just jQLite\r\n\t\t\t\tvar element = $( evnt.currentTarget );\r\n\t\t\t\tvar parent = element.parent();\r\n\t\t\t\tvar well = parent.siblings('.well');\r\n\t\t\t\t// do toggling of hidden class\r\n\t\t\t\tif( well.hasClass('hidden') ) {\r\n\t\t\t\t\twell.removeClass('hidden');\r\n\t\t\t\t\telement.find('.fa-caret-square-o-down')\r\n\t\t\t\t\t.removeClass('fa-caret-square-o-down')\r\n\t\t\t\t\t.addClass('fa-caret-square-o-up')\r\n\t\t\t\t} else {\r\n\t\t\t\t\twell.addClass('hidden');\r\n\t\t\t\t\telement.find('.fa-caret-square-o-up')\r\n\t\t\t\t\t.removeClass('fa-caret-square-o-up')\r\n\t\t\t\t\t.addClass('fa-caret-square-o-down')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// bind our toggle module function to this element's click event\r\n\t\t\telement.bind('click', toggleModule);\r\n\t\t}\r\n\t}\r\n}])","\r\n\r\n\r\n'use strict';\r\n\r\nangular.module('SRI.DASHBOARD')\r\n/*\r\n * @author Robert Roth\r\n * @desc This directive replaces an img src\r\n * on error with the given url link attribute \r\n */\r\n.directive('defaultImage', function() {\r\n    return {\r\n        link: function( scope, element, attrs ) {\r\n          element.bind('error', function() {\r\n//            if ( attrs.src != attrs.defaultImage ) {\r\n              attrs.$set( 'src', attrs.defaultImage );\r\n//            }\r\n          });\r\n        }\r\n    }\r\n});","\r\n\r\nangular.module('sri.module.Effects', [])\r\n\t.directive('ngMaterial', function() {\r\n\t\treturn {\r\n\t\t\trestrict: 'A',\r\n\t\t\tlink: function( scope, element, attr ) {\r\n\t\t\t\tvar container, material, diameter, x, y;\r\n\t\t\t\tcontainer = element;\r\n\t\t\t\telement.on('click', function( evnt ) {\r\n\t\t\t\t\tcontainer.css({\r\n\t\t\t\t\t\t'overflow': 'hidden',\r\n\t\t\t\t\t\t'position': 'relative'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// create the ripple if it doesn't exist\r\n\t\t\t\t\tif( container.find('.material').length == 0 ) {\r\n\t\t\t\t\t\tcontainer.prepend('<span class=\"material\"></span>');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmaterial = container.find('.material');\r\n\t\t\t\t\t// catch multiple clicks and just reanimate\r\n\t\t\t\t\tmaterial.removeClass('animate-material');\r\n\t\t\t\t\t// set size of our ripple\r\n\t\t\t\t\tif( !material.height() && !material.width() )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// to create the circle, get the larger between height and width and use for our ripple\r\n\t\t\t\t\t\tdiameter = Math.max(container.outerWidth(), container.outerHeight());\r\n\t\t\t\t\t\tmaterial.css({height: diameter, width: diameter});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// get click coordinates\r\n\t\t\t\t\tx = evnt.pageX - container.offset().left - material.width()/2;\r\n\t\t\t\t\ty = evnt.pageY - container.offset().top - material.height()/2;\r\n\t\t\t\t\t// set the ripple's position and animate\r\n\t\t\t\t\tmaterial.css({top: y+'px', left: x+'px'}).addClass('animate-material');\r\n\t\t\t\t\t// this is a fix for revealers like wowJS and scrollrevealJS\r\n\t\t\t\t\tmaterial.on('animationend webkitAnimationEnd oanimationend MSAnimationEnd', function() {\r\n\t\t\t\t\t\tmaterial.removeClass('animate-material');\r\n\t\t\t\t\t\tmaterial.remove();\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t})","\r\n'use strict';\r\n\r\nangular.module('SRI.DASHBOARD')\r\n\t.factory('factory.Weight', ['$http', function( $http ){\r\n\t\tvar Weight = {\r\n\t\t\t// get all weight reports\r\n\t\t\tgetAll: function() {\r\n\t\t\t\treturn $http.get('/DashCon/resources/weight/all');\r\n\t\t\t},\r\n\t\t\t// get all weight reports by site id\r\n\t\t\tgetAllBySiteId: function() {\r\n\t\t\t\treturn $http.get('/DashCon/resources/weight');\r\n\t\t\t},\r\n\t\t\t// get a specific weight report\r\n\t\t\tget: function( timestamp, sequenceNumber, siteId ) {\r\n\t\t\t\tvar path = timestamp + '/' + sequenceNumber + '/' + siteId;\r\n\t\t\t\treturn $http.get('/DashCon/resources/weight/' + url);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn Weight;\r\n\t}])","\r\n/*\r\n * @author Robert Roth\r\n * @desc This is an Angular Filter that filters items by time.\r\n * a time limit is given e.g. 120 minutes and as long as the timestamp\r\n * of the item is within the 120 minutes from the computer's clock then\r\n * the item will not be filtered out.\r\n */\r\n\r\n'use strict';\r\n\r\nangular.module('SRI.DASHBOARD')\r\n//\r\n.filter('filterTime', function() {\r\n\tif( ! moment ) {\r\n\t\tconsole.info('MomentJS not found');\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction filterTime( items, options ) {\r\n\t\tvar time = ( typeof options == 'number' ) ? options : options.time;\r\n\t\tvar timelimit = moment( new Date() ).subtract( time, 'minutes').format('YYYY-MM-DD H:mm:ss');\r\n\t\tvar filteredItems = [], timestamp = null;\r\n\t\tif( items != undefined && items.length > 0 )\r\n\t\t\tangular.forEach( items, function( item ) {\r\n\t\t\t\ttimestamp = moment( item.timestamp ).format('YYYY-MM-DD H:mm:ss');\r\n\t\t\t\tif( moment(timestamp, 'YYYY-MM-DD H:mm:ss').isAfter( moment(timelimit, 'YYYY-MM-DD H:mm:ss') ) ) filteredItems.push( item );\r\n\t\t\t})\r\n\t\treturn filteredItems;\r\n\t}\r\n\r\n\treturn filterTime;\r\n})","\r\n\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('SRI.DASHBOARD')\r\n\t.service('service.Mettler', ['$http', 'service.Profile', function( $http, Profile ) {\r\n\t\tvar _this = this;\r\n\t\tvar currentUser = Profile.getProfile();\r\n\t\t\r\n\t\t_this.pollTrucksApp = function() {\r\n\t\t\t$http.get('/DashCon/truckFeedPoll').success( function( data ) {\r\n\t\t\t\t// Disregard invalid entries\r\n\t\t\t\tif( data.timestamp == null || data.timestamp == \"null\" ) return false;\r\n\t\t\t\t// populate feeds based on current user's site id\r\n\t\t\t\tif( currentUser.siteId !== data.siteId ) return false;\r\n\t\t\t\t$rootScope.$broadcast('truckFeedNew', data);\r\n\t\t\t\ttruckPhoneAppEntry( data.sequenceNumber );\r\n\t\t\t\t_this.pollTrucksApp();\r\n\t\t\t}).error( function( err ) {\r\n\t\t\t\tconsole.log( err );\r\n\t\t\t\t_this.pollTrucksApp();\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\t_this.pollTrucksMettler = function() {\r\n\t\t\t$http.get('/DashCon/mettPoll').success( function( data ) {\r\n\t\t\t\t// populate feeds based on current user's site id\r\n\t\t\t\tif( currentUser.siteId !== data.siteId ) return false;\r\n\t\t\t\tif( data.scaleType == 'W' ) {\r\n\t\t\t\t\tpopulateFeedNew( data );\r\n\t\t\t\t} else if( data.scaleType == 'S' ) {\r\n\t\t\t\t\tstaticScaleEntry( data.sequenceNumber );\r\n\t\t\t\t\t$rootScope.$broadcast('staticScale:new', data);\r\n\t\t\t\t}\r\n\t\t\t\t_this.pollTrucksMettler();\r\n\t\t\t}).error( function( err ) {\r\n\t\t\t\tconsole.log( err );\r\n\t\t\t\t_this.pollTrucksMettler();\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t_this.initialize = function() {\r\n\t\t\t_this.pollTrucksApp();\r\n\t\t\t_this.pollTrucksMettler();\r\n\t\t};\r\n\t\t\r\n\t}]);\r\n\t","\r\n\r\n'use strict';\r\n\r\nangular.module('SRI.DASHBOARD')\r\n.service('service.PingImage', ['$http', '$timeout', '$rootScope', pingImage]);\r\n\r\n\r\n\r\nfunction pingImage( $http, $timeout, $rootScope ) {\r\n\tvar _this = this;\r\n\t\r\n\t_this.get = function( data ) {\r\n\t\tif( data != '' ) {\r\n\t\t\tvar id = data.id;\r\n\t\t\tvar sequence = data.sequenceNumber;\r\n\t\t\tvar imageSrc = '/DashCon/dashboard/images/lpr/' + id + '.jpg';\r\n\t\t\t$http.get( imageSrc )\r\n\t\t\t.success( function() {\r\n\t\t\t\t// this avoids the $digest already in progress error\r\n\t\t\t\t// since we're using $apply()\r\n\t\t\t\t$timeout(function(){\r\n\t\t\t\t\t_this.data.hasImage = true;\r\n\t\t\t\t\t_this.data.image = _this.data.id + '.jpg';\r\n\t\t\t\t\t$rootScope.$broadcast('licensePlateImage', _this.data);\r\n\t\t\t\t});\r\n\r\n\t\t\t})\r\n\t\t\t.error( function() {\r\n\t\t\t\tif( id === _this.data.id )\r\n\t\t\t\t\t$timeout( function() {\r\n\t\t\t\t\t\tpingImage( data );\r\n\t\t\t\t\t}, 1500)\r\n\t\t\t\telse\r\n\t\t\t\t\treturn false;\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n}","\r\n\r\n\r\n/*\r\n * author:\tRobert Roth\r\n * desc:\tThis is an Angular Service for interfacing with\r\n * \t\t\tthe Profile Resource web service.\r\n * params:  $http - provides http requests.\r\n */\r\n\r\n'user strict';\r\n\r\nangular.module('SRI.DASHBOARD')\r\n\t.service('service.Profile', ['$http', function( $http ) {\r\n\t\tvar _this = this;\r\n\t\tthis.getProfile = function() {\r\n\t\t\treturn $http.get('/DashCon/resources/profile/').then(function( response ) {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\tthis.updateProfile = function( user ) {\r\n\t\t\treturn $http.put('/DashCon/resources/profile', user ).then( function( response ) {\r\n\t\t\t\treturn response;\r\n\t\t\t});\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tthis.updateEmail = function( email ) {\r\n\t\t\treturn $http.put('/DashCon/resources/profile/email', email).then(function( response ) {\r\n\t\t\t\treturn response;\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\tthis.updatePassword = function( user ) {\r\n\t\t\treturn $http.put('/DashCon/resources/profile/password', user).then(function( response ) {\r\n\t\t\t\treturn response;\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t}]);\r\n\r\n","\r\n\r\n'use strict';\r\n\r\nangular.module('SRI.DASHBOARD')\r\n\t.service('service.WeightReports', ['factory.Weight', 'service.Profile', function( Weight ) {\r\n\t\tvar service = {};\r\n\t\tvar api = Weight;\r\n\t\t// get all weights ran from the api and parses\r\n\t\t// within a time limit, if given.\r\n\t\tthis.getAllWeights = function( time ) {\r\n\t\t\treturn api.getAllBySiteId().then( function( response ) {\r\n\t\t\t\tif( response.data == 'null' ) return false;\r\n\t\t\t\tvar weightReports = response.data.weightReport;\r\n\t\t\t\tvar weights = [];\r\n\t\t\t\tvar scales = [];\r\n\t\t\t\t// ensure the format of both time we'll compare matches\r\n\t\t\t\tvar timeLimit = moment(time, 'YYYY-MM-DD H:mm:ss');\r\n\t\t\t\t// create an array if our response is not one, this\r\n\t\t\t\t// usually happens when only 1 weight report exist.\r\n\t\t\t\tif( ! angular.isArray(weightReports) ) {\r\n\t\t\t\t\tweightReports = [ weightReports ];\r\n\t\t\t\t}\r\n\t\t\t\t// parse our weight reports\r\n\t\t\t\tangular.forEach( weightReports, function( weight ) {\r\n\t\t\t\t\t// ensure the format of both time we'll compare matches\r\n\t\t\t\t\tvar actualTime = moment(weight.timestamp, 'YYYY-MM-DD H:mm:ss');\r\n\t\t\t\t\t// compare weight report time to time limit\r\n\t\t\t\t\tif( actualTime.isAfter( timeLimit ) ) {\r\n\t\t\t\t\t\t// create a user readable format of timestamp\r\n\t\t\t\t\t\tweight.displayTime = moment( weight.timestamp ).format('MM-DD-YYYY H:mm:ss');\r\n\t\t\t\t\t\t// create our pass or fail class for the background\r\n\t\t\t\t\t\t// color of our weight related modules.\r\n\t\t\t\t\t\tif( weight.grossWeight != undefined ) {\r\n\t\t\t\t\t\t\tweight.passed = 'passed';\r\n\t\t\t\t\t\t\tif( weight.status == 'F' ) {\r\n\t\t\t\t\t\t\t\tweight.passed = 'failed';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// separate WIM reports from Static Scale ones.\r\n\t\t\t\t\t\tif( weight.scaleType === 'W' ) {\r\n\t\t\t\t\t\t\tweights.push( weight );\r\n\t\t\t\t\t\t} else if ( weight.scaleType === 'S' ) {\r\n\t\t\t\t\t\t\tscales.push( weight );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tall: weightReports,\r\n\t\t\t\t\twims: weights,\r\n\t\t\t\t\tscales: scales\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\treturn this;\r\n\t}])","\r\n\r\n'use strict';\r\n\r\nangular.module('sri.directive.DataCaptured', [])\r\n.directive('dirDataCaptured', function() {\r\n\treturn {\r\n\t\trestrict: 'EA',\r\n\t\tscope: {},\r\n\t\ttemplateUrl: '/DashCon/dashboard/templates/modules/ModuleTMPL.html',\r\n\t\tlink: function( scope, element, attrs ) {\r\n\t\t\tvar currentTruck = scope.$parent.$parent.currentTruck;\r\n\t\t\tscope.title = 'Data Captured';\r\n\t\t\tscope.data = currentTruck.dataCaptured;\r\n\t\t\tscope.moduleColor = scope.data.Status || '';\r\n\t\t}\r\n\t}\r\n});","\r\n\r\n'use strict';\r\n\r\nangular.module('sri.directive.MainlineWIM', [])\r\n.directive('dirWim', function() {\r\n\treturn {\r\n\t\trestrict: 'EAC',\r\n\t\tscope: {\r\n\t\t\ttruck: '='\r\n\t\t},\r\n\t\treplace: true,\r\n\t\ttemplateUrl: '/DashCon/dashboard/templates/modules/ModuleTMPL.html',\r\n\t\tlink: function( scope ) {\r\n\t\t\t// Get current truck from the parent\r\n\t\t\t//scope.currentTruck = scope.$parent.$parent.currentTruck;\r\n\t\t\tscope.title = 'Mainline Wim';\r\n\t\t\t\r\n\t\t\tscope.$watch('truck', function( newValue, oldValue ) {\r\n\t\t\t\tif( newValue !== oldValue ) {\r\n\t\t\t\t\tscope.data = scope.truck.current.wim;\r\n\t\t\t\t\tconsole.log( scope.data );\r\n\t\t\t\t}\r\n\t\t\t}, true);\r\n\t\t\t\r\n\t\t}\r\n\t};\r\n});","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.container.Modules', [\r\n     \t'sri.controller.RampWIM',\r\n     \t'sri.controller.TruckPhoneInfo',\r\n     \t'sri.controller.Safer.CompanyData',\r\n     \t'sri.controller.Safer.USCrashData',\r\n     \t'sri.controller.Safer.SafetyRating',\r\n     \t'sri.controller.Safer.USInspections',\r\n     \t'sri.controller.StaticScale',\r\n     \t'sri.controller.SaferLookup',\r\n     \t'sri.controller.LicensePlateRdr'\r\n     \t])","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.DataCaptured', [])\r\n\t.controller('DataCapturedCTRL', ['$scope', function( $scope ) {\r\n\t\t$scope.truck = $scope.truck || {};\r\n\t\t\r\n\t\t$scope.dataCaptured = $scope.dataCaptured || {};\r\n\t\t$scope.dataCaptured.id = 'dataCaptured';\r\n\t\t$scope.dataCaptured.title = 'Data Captured';\r\n\r\n\t\tvar currentTruck = $scope.truck.current;\r\n\t\t\r\n\t\t$scope.dataCaptured.licensePlate = currentTruck.licensePlate;\r\n\t\t$scope.dataCaptured.dotNumber = currentTruck.dotNumber;\r\n\t\t$scope.dataCaptured.weight = currentTruck.weight;\r\n\t\t\r\n\t\t$scope.$watch('truck', function( newValue, oldValue ) {\r\n\t\t\tif( newValue !== oldValue ) {\r\n\t\t\t\tcurrentTruck = $scope.truck.current;\r\n\t\t\t\t$scope.dataCaptured.licensePlate = currentTruck.licensePlate;\r\n\t\t\t\t$scope.dataCaptured.dotNumber = currentTruck.dotNumber;\r\n\t\t\t\t$scope.dataCaptured.weight = currentTruck.weight;\r\n\t\t\t}\r\n\t\t}, true);\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.LicensePlateRdr', [])\r\n\t.controller('LicensePlateCtrl', ['$scope', '$rootScope', '$http', 'service.Profile', '$timeout',\r\n     function( $scope, $rootScope, $http, Profile, $timeout ) {\r\n\t\t$scope.truck = $scope.truck || {};\r\n\t\tvar _this = this;\t\t\r\n\t\t// set default values for reset and reference\r\n\t\tvar lprDefaults = {\r\n\t\t\tid: '',\r\n\t\t\ttimestamp: null,\r\n\t\t\tsiteId: null,\r\n\t\t\tfileName: '',\r\n\t\t\tsequenceNumber: null,\r\n\t\t\tlicensePlateNumber: null,\r\n\t\t\tstate: '',\r\n\t\t\thasImage: false\r\n\t\t}\r\n\t\t// instantiate our license plate object\r\n\t\t_this.data = angular.extend({}, lprDefaults);\r\n\r\n\t\tProfile.getProfile().then( function( currentUser ) {\r\n\t\t\t$scope.userSiteId = currentUser.siteId;\r\n\r\n\t\t\tif( currentUser.siteId == '2' ) {\r\n\t\t\t\tpollLicensePlate( currentUser );\r\n\t\t\t\t// call the license plate image when user changes active truck\r\n\t\t\t\t$scope.$watch('truck.current', function( newValue, oldValue ) {\r\n\t\t\t\t\t// Disregard undefined values\r\n\t\t\t\t\tif( newValue == undefined ) return false;\r\n\t\t\t\t\tif( newValue !== oldValue ) {\r\n\t\t\t\t\t\tvar path = newValue.siteId + '/' + newValue.sequenceNumber;\r\n\t\t\t\t\t\t$http.get('/DashCon/resources/lpr/' + path).then(function( promise ) {\r\n\t\t\t\t\t\t\t_this.data = promise.data;\r\n\t\t\t\t\t\t\tif( promise.data != '' ) {\r\n\t\t\t\t\t\t\t\tnewValue.hasLPR = true;\r\n\t\t\t\t\t\t\t\tpingImage( _this.data, newValue );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, function( err ) {\r\n\t\t\t\t\t\t\t_this.data = angular.extend({}, lprDefaults);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// long poll our truck feed servlet\r\n\t\tfunction pollLicensePlate( currentUser ) {\r\n\t\t\t$http.get('/DashCon/licensePlatePoll').success( function( data ) {\r\n\t\t\t\t// Disregard invalid entries\r\n\t\t\t\tif( data.timestamp !== null || data.timestamp !== \"null\" || data.timestamp !== undefined )\r\n\t\t\t\t\t// populate feeds based on current user's site id\r\n\t\t\t\t\tif( currentUser.siteId == data.siteId ) {\r\n\t\t\t\t\t\tvar truck = $scope.truck.current;\r\n\t\t\t\t\t\t// since this is a long poll method we need to match the data id\r\n\t\t\t\t\t\t// to the active truck, especially when truck feed switching is\r\n\t\t\t\t\t\t// set to 'Locked'\r\n\t\t\t\t\t\tif( truck.sequenceNumber == data.sequenceNumber ) {\r\n\t\t\t\t\t\t\t// cache data to our controller\r\n\t\t\t\t\t\t\t_this.data = data;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// ping our image until it's found in the file system\r\n\t\t\t\t\t\tpingImage( data, truck );\r\n\t\t\t\t\t\t$rootScope.$broadcast('licensePlateAvailable', data);\r\n\t\t\t\t\t}\r\n\t\t\t\tpollLicensePlate(currentUser);\r\n\t\t\t}).error( function( err ) {\r\n\t\t\t\tconsole.log( err );\r\n\t\t\t\t_this.data = angular.extend({}, lprDefaults);\r\n\t\t\t\tpollLicensePlate(currentUser);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tfunction pingImage( data, truck ) {\r\n\t\t\tif( data != '' ) {\r\n\t\t\t\tvar id = data.id;\r\n\t\t\t\tvar imageSrc = '/DashCon/dashboard/images/lpr/' + id + '.jpg';\r\n\t\t\t\t$http.get(imageSrc)\r\n\t\t\t\t.success( function() {\r\n\t\t\t\t\t// this avoids the $digest already in progress error\r\n\t\t\t\t\t// since we're using $apply()\r\n\t\t\t\t\t$timeout(function() {\r\n\t\t\t\t\t\t$rootScope.$broadcast('licensePlateImage', data);\r\n\t\t\t\t\t\tif( data.sequenceNumber == truck.sequenceNumber ) {\r\n\t\t\t\t\t\t\t_this.data.hasImage = true;\r\n\t\t\t\t\t\t\t_this.data.image = _this.data.id + '.jpg';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t})\r\n\t\t\t\t.error( function() {\r\n\t\t\t\t\t$timeout( function() {\r\n\t\t\t\t\t\tpingImage( data, truck );\r\n\t\t\t\t\t}, 1500)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.SaferLookup', ['sri.module.Effects'])\r\n\t.controller('SaferLookupCTRL', ['$scope', '$http', '$rootScope', '$timeout',\r\n    function( $scope, $http, $rootScope, $timeout ) {\r\n\t\t// variables\r\n\t\t$scope.truck = $scope.truck || {};\r\n\t\tvar _this = this;\r\n\t\t_this.hasUSDOT = false;\r\n\t\t_this.usdotNumber = _this.usdotNumber || null;\r\n\t\t// get USDOT number on truck active change\r\n\t\t$scope.$watch('truck.current', function( newValue, oldValue ) {\r\n\t\t\tif( newValue != undefined && newValue != oldValue ) {\r\n\t\t\t\t// reset our values\r\n\t\t\t\t_this.usdotNumber = '';\r\n\t\t\t\t_this.hasUSDOT = false;\r\n\t\t\t\t// make a get request using sequence number and site id\r\n\t\t\t\tvar path = newValue.sequenceNumber + '/' + newValue.siteId;\r\n\t\t\t\t$http.get('/DashCon/resources/usdot/' + path)\r\n\t\t\t\t\t.then(function( promise ) {\r\n\t\t\t\t\t\tif( promise.data != undefined ) {\r\n\t\t\t\t\t\t\tvar data = promise.data;\t\t\t// promised data\r\n\t\t\t\t\t\t\tvar truck = $scope.truck.current;\t// current truck\r\n\t\t\t\t\t\t\t// check if data matches active truck feed\r\n\t\t\t\t\t\t\tif( data.sequenceNumber == truck.sequenceNumber ) {\r\n\t\t\t\t\t\t\t\t// set module data\r\n\t\t\t\t\t\t\t\t_this.usdotNumber = data.usdotNumber;\r\n\t\t\t\t\t\t\t\t// set truck feed icon and module validation to true\r\n\t\t\t\t\t\t\t\ttruck.hasUSDOT = _this.hasUSDOT = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// broadcast undefined USDOT number\r\n\t\t\t\t\t\t\t$rootScope.$broadcast('saferLookupUndefined', response.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$scope.$on('truckFeedNew', function( $event, message ) {\r\n\t\t\t// reset our values\r\n\t\t\t_this.usdotNumber = '';\r\n\t\t\t_this.hasUSDOT = false;\r\n\t\t\t// make a get request using sequence number and site id\r\n\t\t\tvar path = message.sequenceNumber + '/' + message.siteId;\r\n\t\t\t$http.get('/DashCon/resources/usdot/' + path)\r\n\t\t\t\t.then(function( promise ) {\r\n\t\t\t\t\tif( promise.data != undefined ) {\r\n\t\t\t\t\t\tvar data = promise.data;\t\t\t// promised data\r\n\t\t\t\t\t\tvar truck = $scope.truck.current;\t// current truck\r\n\t\t\t\t\t\t// check if data matches active truck feed\r\n\t\t\t\t\t\tif( data.sequenceNumber == truck.sequenceNumber ) {\r\n\t\t\t\t\t\t\tloadUSDOTNumber( data );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// broadcast undefined USDOT number\r\n\t\t\t\t\t\t$rootScope.$broadcast('saferLookupUndefined', response.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t\t// add the US DOT Number to the controller's scope as well\r\n\t\t// as adding it to the current active truck\r\n\t\tfunction loadUSDOTNumber( data ) {\r\n\t\t\tif( typeof data == 'object' && data.usdotNumber != undefined ) {\r\n\t\t\t\t_this.usdotNumber = data.usdotNumber;\r\n\t\t\t\t_this.hasUSDOT = true;\r\n\t\t\t\t$scope.truck.current.hasUSDOT = true;\r\n\t\t\t\t$scope.truck.current.usdotNumber = _this.usdotNumber;\r\n\t\t\t} else {\r\n\t\t\t\t_this.usdotNumber = undefined;\r\n\t\t\t\t_this.hasUSDOT = false;\r\n\t\t\t\t$scope.truck.current.hasUSDOT = false;\r\n\t\t\t\t$scope.truck.current.usdotNumber = undefined;\r\n\t\t\t}\r\n\t\t\t// assign true to signify this is triggered by lookup\r\n\t\t\t_this.searchSafer();\r\n\t\t}\r\n\t\t\r\n\t\t_this.searchSafer = function() {\r\n\t\t\t// cache active truck\r\n\t\t\tvar truck = $scope.truck.current;\r\n\t\t\t// check if triggered by lookup or change of current truck\t\t\t\r\n\t\t \tif( _this.usdotNumber != null && _this.usdotNumber != undefined && _this.usdotNumber != null ) {\r\n\t\t\t \t_this.loading = true;\r\n\t\t\t\t$http.get('/DashCon/resources/safer/' + _this.usdotNumber )\r\n\t\t\t\t.then( function( response ){\r\n\t\t\t\t\tloadSafer( response.data, truck );\r\n\t\t\t\t\t$timeout( function() {\r\n\t\t\t\t \t\t_this.loading = false;\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t})\r\n\t\t \t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction loadSafer( data, truck ) {\r\n\t\t\t// a bug happens when switching active truck quicker than\r\n\t\t\t// safer can respond and load safer values showing data\r\n\t\t\t// to the wrong truck feed, lookup != false helps prevent it\r\n\t\t\t// by ensuring the truck's usdot number is equal to the lookup\r\n\t\t\tif( typeof data == 'object' && data.companyData != undefined ) {\r\n\t\t\t\t_this.hasUSDOT = true;\r\n\t\t\t\ttruck.hasUSDOT = true;\r\n\t\t\t\t$rootScope.$broadcast('saferLookupSuccess', data );\r\n\t\t\t} else {\r\n\t\t\t\t_this.hasUSDOT = false;\r\n\t\t\t\ttruck.hasUSDOT = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t_this.clearInput = function( $event ) {\r\n\t\t\tif( $event ) $event.stopPropagation();\r\n\t\t\t_this.usdotNumber = null;\r\n\t\t\t_this.hasUSDOT = false;\r\n\t\t\t$http.delete('/DashCon/resources/usdot/' + $scope.truck.current.sequenceNumber)\r\n\t\t\t.success( function() {\r\n\t\t\t\t$scope.truck.current.usdotNumber = undefined;\r\n\t\t\t\t$scope.truck.current.hasUSDOT = false;\r\n\t\t\t\t$rootScope.$broadcast('saferLookupCleared', '');\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\t_this.saveUSDOTNumber = function( $event, manualEntered, userId ) {\r\n\t\t\tvar saferLookup = _this;\r\n\t\t\t// cache current truck\r\n\t\t\tvar truck = $scope.truck.current;\r\n\t\t\t// build our usdot object to be sent as part of our request\r\n\t\t\tvar usdot= {};\r\n\t\t\tusdot.usdotNumber = saferLookup.usdotNumber;\r\n\t\t\tusdot.sequenceNumber = $scope.truck.current.sequenceNumber;\r\n\t\t\tusdot.manualEntered = manualEntered || 1;\r\n\t\t\tusdot.userId = userId || 'not implemented';\r\n\t\t\tusdot.siteId = truck.siteId;\r\n\t\t\t// send a post to saved our usdot to our database\r\n\t\t\tif( usdot.usdotNumber !== null ) {\r\n\t\t\t\t$http.post('/DashCon/resources/usdot', usdot)\r\n\t\t\t\t.success( function( response, status) {\r\n\t\t\t\t\t// 201 = if we created a new row in our usdot databse\r\n\t\t\t\t\tif( status == 201 ) {\r\n\t\t\t\t\t\t$scope.truck.current.hasUSDOT = true;\r\n\t\t\t\t\t\ttruck.usdotNumber = usdot.usdotNumber;\r\n\t\t\t\t\t\t_this.usdotNumber = usdot.usdotNumber;\r\n\t\t\t\t\t\t_this.hasUSDOT = true;\r\n//\t\t\t\t\t\tTODO: Add notification for create USDOT Number\r\n\t\t\t\t\t} \r\n\t\t\t\t\t// 202 = if we updated a row in our usdot database\r\n\t\t\t\t\telse if( status == 202 ) {\r\n\t\t\t\t\t\ttruck.hasUSDOT = true;\r\n\t\t\t\t\t\ttruck.usdotNumber = saferLookup.usdotNumber;\r\n//\t\t\t\t\t\tTODO: remove the commented block of code if proven to cause errors\r\n//\t\t\t\t\t\ttruck.usdotNumber = undefined;\r\n//\t\t\t\t\t\t_this.usdotNumber = undefined;\r\n\t\t\t\t\t\t_this.hasUSDOT = true;\r\n//\t\t\t\t\t\tTODO: Add notification for updated USDOT Number\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.error( function( res ) {\r\n\t\t\t\t\t_this.clearInput();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn _this;\r\n\t\t\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.StaticScale', [])\r\n\t.controller('StaticScaleCTRL', ['$rootScope', '$scope', '$http', '$timeout', function( $rootScope, $scope, $http, $timeout ) {\r\n\t\t$scope.truck = $scope.truck || {};\r\n\t\t$scope.scale = $scope.scale || {};\r\n\t\t$scope.scale.data= $scope.scale.data || {};\r\n\t\t\r\n\t\t$scope.$watch('truck.current', function( newValue, oldValue ) {\r\n\t\t\t// Disregard undefined values\r\n\t\t\tif( newValue == undefined ) return false;\r\n\t\t\t\r\n\t\t\tif( newValue !== oldValue ) {\r\n\t\t\t\tvar apiUrl = newValue.timestamp + '/' + newValue.sequenceNumber + '/' + newValue.siteId;\r\n\t\t\t\t$http.get('/DashCon/resources/weight/static/' + apiUrl )\r\n\t\t\t\t\t.success( getScaleWeight )\r\n\t\t\t\t\t.then(function() {\r\n\t\t\t\t\t\t$timeout(function() {\r\n\t\t\t\t\t\t\t$scope.scale.loading = false;\r\n\t\t\t\t\t\t}, 1200);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$scope.$on('staticScale:new', function( event, data ) {\r\n\t\t\tconsole.info('Static Scale Entry: Detected!');\r\n\t\t\tvar apiUrl = data.timestamp + '/' + data.sequenceNumber + '/' + data.siteId;\r\n\t\t\t$http.get('/DashCon/resources/weight/static/' + apiUrl ).success( getScaleWeight2 );\r\n\t\t});\r\n\t\t\r\n\t\tfunction getScaleWeight( response ) {\r\n\t\t\t$scope.scale.data = response;\r\n\t\t\t\r\n\t\t\tif( response == \"\" || response == undefined || response == null ) {\r\n\t\t\t\treturn $scope.truck.current.hasScale = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$scope.truck.current.hasScale = true;\r\n\t\t\t\r\n\t\t\t$scope.scale.loading = true;\r\n\t\t\t\r\n\t\t\t$scope.scale.data.displayTime = moment(response.timestamp).format('MM-DD-YYYY H:mm:ss');\r\n\t\t\t\r\n\t\t\tif( response.status == 'P' ) {\r\n\t\t\t\t$scope.scale.data.passed = 'passed';\r\n\t\t\t} else {\r\n\t\t\t\t$scope.scale.data.passed = 'failed';\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t\r\n\t\tfunction getScaleWeight2( response ) {\r\n\t\t\tif( $scope.truck.current.sequenceNumber == response.sequenceNumber ) {\r\n\t\t\t\t$scope.scale.data = response;\r\n\r\n\t\t\t\tif( response == \"\" || response == undefined || response == null ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$scope.scale.loading = true;\r\n\r\n\t\t\t\t$scope.scale.data.displayTime = moment(response.timestamp).format('MM-DD-YYYY H:mm:ss');\r\n\r\n\t\t\t\tif( response.status == 'P' ) {\r\n\t\t\t\t\t$scope.scale.data.passed = 'passed';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$scope.scale.data.passed = 'failed';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$rootScope.$broadcast('staticScale:entry', response.sequenceNumber );\r\n\r\n\t\t\t\t$timeout(function() {\r\n\t\t\t\t\t$scope.scale.loading = false;\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\n// CREATE ANGULAR MODULE\r\nangular.module('sri.controller.TruckPhoneInfo', [])\r\n// CONTROLLER DEFINITION\r\n.controller('TruckPhoneInfoCTRL', ['$scope', '$http', '$timeout', '$rootScope',\r\n// CONTROLLER FUNCTION\r\nfunction( $scope, $http, $timeout, $rootScope ) {\r\n\t$scope.truck = $scope.truck || {};\r\n\t$scope.truckInfo = $scope.truckInfo || {};\r\n\t$scope.truckInfo.data = $scope.truckInfo.data || {};\r\n\t\r\n\t// load data when current truck is changed\r\n\t$scope.$watch('truck.current', function( newValue, oldValue ) {\r\n\t\t// Disregard undefined value\r\n\t\tif( newValue == undefined ) return false;\r\n\t\t// Remove background color initially\r\n\t\t// Check if the value is different from the previous one\r\n\t\tif( newValue !== oldValue ) {\r\n\t\t\tvar path = newValue.sequenceNumber + '/' + newValue.siteId;\r\n\t\t\t$http.get('/DashCon/resources/truck/' + path).then( getInfo );\r\n\t\t}\r\n\t});\r\n\t\r\n\t// grab data when a new SRI Mobile truck user's data\r\n\t//comes in from our truck phone poll\r\n\t$scope.$on('truckFeedNew', function(event, message) {\r\n\t\t// get data from the database to populate our feed\r\n\t\tvar truck = $scope.truck.current;\r\n\t\tif( message.sequenceNumber == truck.sequenceNumber ) {\r\n\t\t\t$scope.truckInfo.loading = true;\r\n\t\t\t$scope.truckInfo.hasData = true;\r\n\t\t\t$scope.truckInfo.data = message;\r\n\t\t\t$timeout(function() {\r\n\t\t\t\t$scope.truckInfo.loading = false;\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t});\r\n\r\n\t// create a function for setting the data from our response param\r\n\t// response - is passed from any get request that uses this function\r\n\tfunction getInfo( response ) {\r\n\t\tvar data = response.data;\r\n\t\t// Initiate loading bar to simulate a loading of data\r\n\t\t$scope.truckInfo.loading = ( data != '' ) ? true : false;\r\n\t\t// Change background color if data is available\r\n\t\t$scope.truckInfo.hasData = ( data != '' ) ? true : false;\r\n\t\t// Set this module's data to the response\r\n\t\t// NOTE: Make sure the API returns only 1 object\r\n\t\t$scope.truckInfo.data = data;\r\n\t\t$rootScope.$broadcast('truckPhoneActive', data);\r\n\t\t// simulate end of loading by removing the animation\r\n\t\t$timeout( function() {\r\n\t\t\t$scope.truckInfo.loading = false;\r\n\t\t}, 1000);\r\n\t}\r\n\t\r\n}]);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.RampWIM', [])\r\n\t.controller('RampWIMCTRL', ['$rootScope', '$scope', '$http', '$timeout', function( $rootScope, $scope, $http, $timeout ) {\r\n\t\t$scope.truck = $scope.truck || {};\r\n\t\t$scope.wim = $scope.wim || {};\r\n\t\t$scope.wim.id = 'wim';\r\n\t\t$scope.wim.title = 'Mainline WIM';\r\n\t\t$scope.wim.data = $scope.wim.data || {};\r\n\t\t\r\n\t\t$scope.$watch('truck.current', function( newValue, oldValue ) {\r\n\t\t\t// Disregard undefined values\r\n\t\t\tif( newValue == undefined ) return false;\r\n\t\t\t\r\n\t\t\tif( newValue !== oldValue ) {\r\n\t\t\t\tvar apiUrl = newValue.timestamp + '/' + newValue.sequenceNumber + '/' + newValue.siteId;\r\n\t\t\t\t$http.get('/DashCon/resources/weight/wim/' + apiUrl ).then( getWeight ).then(function() {\r\n\t\t\t\t\t$timeout(function() {\r\n\t\t\t\t\t\t$scope.wim.loading = false;\r\n\t\t\t\t\t}, 1200);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tfunction getWeight( promise ) {\r\n\t\t\tvar data = promise.data;\r\n\t\t\t$scope.wim.data = data;\r\n\t\t\t\r\n\t\t\tif( data != '' ) {\r\n\t\t\t\r\n\t\t\t\t$scope.wim.loading = true;\r\n\t\t\t\t\r\n\t\t\t\t$scope.wim.data.displayTime = moment(data.timestamp).format('MM-DD-YYYY H:mm:ss') || '';\r\n\t\t\t\t\r\n\t\t\t\tif( data.status == 'P' ) {\r\n\t\t\t\t\t$scope.wim.data.passed = 'passed';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$scope.wim.data.passed = 'failed';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t$rootScope.$broadcast('newTruck', $scope.wim.data.timestamp);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.Safer.CompanyData', [])\r\n\t.controller('CompanyDataCTRL', ['$scope', '$http', '$timeout', '$rootScope', function( $scope, $http, $timeout, $rootScope ) {\r\n\t\t$scope.truck = $scope.truck || {};\r\n\t\t$scope.safer = $scope.safer || {};\r\n\t\t\r\n\t\t$scope.$on('truckPhoneActive', function( event, data ) {\r\n\t\t\tif( data == '' || data == 'null' || data == undefined || data.usdotNumber == undefined ) {\r\n\t\t\t\tloadSafer( data );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$on('phoneAppUSDOTNumberAvailable', function ( event, message ) {\r\n\t\t\tvar usdotNumber = ( message.usdotNumber ) ? message.usdotNumber : '';\r\n\t\t\t$scope.safer.loading = ( usdotNumber != '' && usdotNumber != 'null' && usdotNumber != undefined ) ? true : false;\r\n\t\t\t$http.get('/DashCon/resources/safer/' + usdotNumber )\r\n\t\t\t\t.then( loadSafer );\r\n\t\t})\r\n\r\n\t\t$scope.$watch('truck.current', function( newValue, oldValue ) {\r\n\t\t\t// Disregard undefined value\r\n\t\t\tif( newValue == undefined ) return false;\r\n\t\t\t// Remove background color initially\r\n\t\t\t// Check if the value is different from the previous one\r\n\t\t\tif( newValue !== oldValue ) {\r\n\t\t\t\tvar usdotNumber = newValue.usdotNumber;\r\n\t\t\t\tif( typeof usdotNumber == 'object' ) {\r\n\t\t\t\t\tusdotNumber = usdotNumber.usdotNumber;\r\n\t\t\t\t}\r\n\t\t\t\t$scope.safer.loading = ( usdotNumber != '' || usdotNumber != 'null' ) ? true : false;\r\n\t\t\t\t$http.get('/DashCon/resources/safer/' + usdotNumber )\r\n\t\t\t\t\t.then( loadSafer )\r\n\t\t\t}\r\n\t\t});\r\n\t\t// when the safer response is successful and data is not empty\r\n\t\t// load our safer information to other safer modules\r\n\t\t$scope.$on('saferLookupSuccess', function( event, data ) {\r\n\t\t\tif( data != '' ) {\r\n\t\t\t\t$scope.safer.loading = true;\r\n\t\t\t\tloadSafer( data, true );\r\n\t\t\t}\r\n\t\t});\r\n\t\t// clear all our data when the clear button on the\r\n\t\t// safer lookup module is triggered\r\n\t\t$scope.$on('saferLookupCleared', function() {\r\n\t\t\tvar truck = $scope.truck.current;\r\n\t\t\t$scope.safer.data = '';\r\n\t\t\ttruck.usdotNumber = undefined;\r\n\t\t\ttruck.hasUSDOT = undefined;\r\n\t\t\t$rootScope.$broadcast('saferDataLoaded', '');\r\n\t\t});\r\n\t\t\r\n\t\tfunction loadSafer( response, lookup ) {\r\n\t\t\tif( response == undefined ) return false;\r\n\t\t\tvar data = ( response.data != undefined ) ? response.data : response;\r\n\t\t\tif( lookup == true ) {\r\n\t\t\t\t$scope.safer.data = data;\r\n\t\t\t\t$rootScope.$broadcast('saferDataLoaded', data);\r\n\t\t\t} else if( $scope.truck.current.hasUSDOT == true ){\r\n\t\t\t\t$scope.safer.data = data;\r\n\t\t\t\t$rootScope.$broadcast('saferDataLoaded', data);\r\n\t\t\t} else {\r\n\t\t\t\t$scope.safer.data = '';\r\n\t\t\t\t$rootScope.$broadcast('saferDataLoaded', '');\r\n\t\t\t}\r\n\t\t\t$scope.safer.loading = false;\r\n\t\t}\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.Safer.SafetyRating', [])\r\n\t.controller('SafetyRatingCTRL', ['$scope', 'service.Profile', function( $scope, Profile ) {\r\n\t\tvar _this = this\r\n\t\t\r\n\t\tProfile.getProfile().then( function( data ) {\r\n\t\t\t_this.user = data;\r\n\t\t});\r\n\t\t\r\n\t\t$scope.$on('saferDataLoaded', function( event, data ) {\r\n\t\t\tif( typeof data == 'object' && data.safetyRating != undefined ) {\r\n\t\t\t\t_this.data = data.safetyRating;\r\n\t\t\t} else {\r\n\t\t\t\t_this.data = '';\r\n\t\t\t}\r\n\t\t});\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.Safer.USCrashData', [])\r\n\t.controller('USCrashDataCTRL', ['$scope', '$http', 'service.Profile', '$timeout', function( $scope, $http, Profile, $timeout ) {\r\n\t\tvar _this = this;\r\n\t\t\r\n\t\tProfile.getProfile().then( function( data ) {\r\n\t\t\t_this.user = data;\r\n\t\t});\r\n\t\t\r\n\t\t$scope.$on('saferDataLoaded', function( event, data ) {\r\n\t\t\tif( typeof data == 'object' && data.usCrashData != undefined ) {\r\n\t\t\t\t_this.data = data.usCrashData;\r\n\t\t\t} else {\r\n\t\t\t\t_this.data = '';\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t}]);","\r\n\r\n'use strict';\r\n\r\n\r\nangular.module('sri.controller.Safer.USInspections', [])\r\n\t.controller('USInspectionsCTRL', ['$scope', function( $scope ) {\r\n\t\tvar _this = this;\r\n\t\t$scope.$on('saferDataLoaded', function( event, data ) {\r\n\t\t\tif( data != undefined && data != '' && data !== null )\r\n\t\t\t\t_this.data = ( data.usInspectionData ) ? data.usInspectionData.inspections : {};\r\n\t\t\telse\r\n\t\t\t\t_this.data = {};\r\n\t\t});\r\n\t}]);"],"sourceRoot":"/source/"}